import type {Metadata} from 'next';
import {Geist, Geist_Mono} from 'next/font/google';
import './globals.css';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Firebase Studio App',
  description: 'Generated by Firebase Studio',
};

async function installDemucs() {
  if (typeof window === 'undefined') {
    try {
      // Check if demucs is already installed
      const { execSync } = require('child_process');
      execSync('demucs --version');
      console.log('Demucs is already installed.');
    } catch (error) {
      // Install demucs if not installed
      console.log('Installing demucs...');
      const { spawn } = require('child_process');
      const demucsInstallProcess = spawn('pip', ['install', 'demucs']);

      demucsInstallProcess.stdout.on('data', (data: Buffer) => {
        console.log(`Demucs install stdout: ${data}`);
      });

      demucsInstallProcess.stderr.on('data', (data: Buffer) => {
        console.error(`Demucs install stderr: ${data}`);
      });

      demucsInstallProcess.on('close', (code) => {
        if (code === 0) {
          console.log('Demucs installed successfully.');
        } else {
          console.error(`Demucs install process exited with code ${code}`);
        }
      });

      demucsInstallProcess.on('error', (err: any) => {
        console.error('Failed to start Demucs install process.', err);
      });
    }
  }
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  try {
      await installDemucs();
  } catch (e: any) {
      console.error('Failed to install Demucs:', e);
  }
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        {children}
      </body>
    </html>
  );
}
